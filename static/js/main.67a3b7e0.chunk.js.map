{"version":3,"sources":["WorkItem.js","Work.js","App.js","serviceWorker.js","index.js"],"names":["WorkItem","props","console","log","text","title","tools","imgUrl","onMouseOver","onMouseLeave","onClick","link","className","e","src","alt","target","Work","this","portItems","map","item","key","id","React","Component","App","state","d","nextSibling","classList","add","remove","url","window","open","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67a3b7e0.chunk.js","sourcesContent":["import React from 'react';\n// import './App.css';\n\nconst WorkItem = (props) =>  {\nconsole.log(props)\n  // props = {\n  //   text:'text',\n  //   title:'title',\n  //   techText: 'tech text', \n  //   imgUrl:\"./images/work/Anthem-DAC.png\"\n  // }\n\n  const {text, title, tools, imgUrl, onMouseOver, onMouseLeave, onClick, link} = props;\n\n  return (\n    \n        <div className=\"item\" onMouseOver={onMouseOver} onClick={link ? (e) => {onClick({link})} : null} >\n          <img className=\"img-btn\"  src={imgUrl} alt=\"\" />\n          <div className=\"slider\" onMouseLeave={onMouseLeave}>\n            <h3>{title}</h3>\n            <p className='hover-text'>{text}</p>\n            <p className=\"hover-text\">\n            {tools}</p>\n            {link ? <a className='hover-text' target='_blank' >View</a> : null}\n            {/* href={link} */}\n          </div>\n        </div>\n  \n\n  );\n}\n\nexport default WorkItem;\n\n\n","import React from 'react';\nimport WorkItem from './WorkItem';\n// import './App.css';\n\n\nclass Work extends React.Component {\n\n  render() {\n    \n    console.log(this.props.portItems)\n    return (\n      <div className=\"work-container\">\n        {this.props.portItems.map((item)=>(\n          <WorkItem key={item.id} title={item.title} text={item.text} tools={item.tools} imgUrl={item.imgUrl} onMouseOver={this.props.onMouseOver} onMouseLeave ={this.props.onMouseLeave} onClick={this.props.onClick} link={item.link}/>\n        ))}\n    </div>\n    )\n  }\n}\n\n\n\nexport default Work;","import React, { Component } from 'react'\nimport Work from './Work';\n\n class App extends Component {\n    state = {\n        portItems: [\n       {\n         id:1,\n         title:'Anthem DAC Coverage',\n         text:'Registration for qualified leads to learn more about medical coverage gap.',\n         tools:'HTML5, CSS3, JS, ReactJS, AWS - Lambda, GatewayAPI, SES, Route53, CloudFront, NodeJS',\n         imgUrl: './images/work/Anthem-DAC.png',\n         link:'https://dq212.github.io/anthem-dac-react/index.html'\n       },\n       {\n         id:2,\n         title:'Motopreserve App for ios',\n         text:'iOS productivity app for motorcycle riders, builders, and enthusiasts.',\n         tools:'Swift, Xcode, Photoshop, AppStore',\n         imgUrl: './images/work/mp_app.jpg',\n         link:'https://itunes.apple.com/us/app/motopreserve/id1253423212?ls=1&mt=8'\n       },\n       {\n         id:3,\n         title:'Motopreserve Web App',\n         text:'React/Redux web app for motorcycle riders, builders, and enthusiasts.Built to support the iOS app.',\n         tools:'React, Redux, Webpack, HTML, CSS, JS, Photoshop',\n         imgUrl: './images/work/mp_app_react.png',\n         link:'https://mp-react-2.herokuapp.com/'\n       },\n       {\n         id:4,\n         title:'Bloomingdales App',\n         text:'Layouts and implemetation of assets and codes for shopping items and options for tablet and mobile app.',\n         tools:'Photoshop, HTML5, CSS3, JS',\n         imgUrl: './images/work/bloomingdales_home.png',\n         link:''\n       },\n       {\n         id:5,\n         title:'Zelis Landing Page',\n         text:'Wordpress custom page in order to get targeted registrations for lead generation.',\n         tools:'HTML5, CSS3, JS',\n         imgUrl: './images/work/zelis_landing_page.png',\n         link:'https://www.zelis.com/claimpass/'\n       },\n       {\n         id:6,\n         title:'USI Attorneys Preferred',\n         text:'Site for Attorneys to get information about all  available types of insurance available to their profession',\n         tools:'Photoshop, HTML5, CSS3, JS',\n         imgUrl: './images/work/usi-site.png',\n         link:'http://www.usiaffinity.com/attorneyspreferred/'\n       },\n       {\n         id:7,\n         title:'EMPIRE UNION-GRADE',\n         text:'Information on new IngenioRx benefits in New York targeting union members.',\n         tools:'HTML5, CSS3, JS, AWS, Route53, Cloudfront, SES',\n         imgUrl: './images/work/empire-union-grade.png',\n         link:'http://www.nyuniongrade.com/'\n       },\n       {\n         id:8,\n         title:'AARP + IRELAUNCH',\n         text:'Landing page promoting older members re-entering the workforce after an extended hiatus.',\n         tools:'HTML5, CSS3, JS',\n         imgUrl: './images/work/aarp-irelaunch.png',\n         link:'https://dq212.github.io/aarp-irelaunch/'\n       }\n     ]\n   }\n\n   onMouseOver = (e) => {\n    console.log(e.target)\n    const d = e.target.nextSibling;\n    console.log(d);\n    if(d){\n      d.classList.add('close');\n    }\n  } \n\n  onMouseLeave = (e)=>{\n    console.log(e.target)\n    const d = e.target;\n    if(d){\n       d.classList.remove('close');\n      }\n  } \n\n  onClick = (link) =>{\n    console.log(link);\n    const url = link['link'];\n    console.log(url);\n    window.open(url, '_blank');\n  }\n\n \n\n    render() {\n      const {portItems} = this.state;\n        return (\n            <div>\n                <Work portItems={portItems} onMouseOver={this.onMouseOver} onMouseLeave={this.onMouseLeave} onClick={this.onClick}/>\n            </div>\n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// text:'text',\n// title:'title',\n// techText: 'tech text', \n// imgUrl:\"./images/work/Anthem-DAC.png\"\n\n    \n"],"sourceRoot":""}